generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/**
 * ======================= User (for auth) =======================
 */
model User {
  id           String     @id @default(cuid())
  email        String     @unique
  passwordHash String
  firstName    String?
  lastName     String?
  dob          DateTime?
  bookings     Booking[]
  favorites    Favorite[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

/**
 * ====================== Hotel Details ========================
 */

model Hotel {
  id          Int          @id @default(autoincrement())
  name        String
  city        String
  price       Int
  rating      Float
  description String?
  images      HotelImage[] // relation used by your seed
  bookings    Booking[]
  favorites   Favorite[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model HotelImage {
  id      Int     @id @default(autoincrement())
  url     String
  alt     String?
  hotelId Int
  hotel   Hotel   @relation(fields: [hotelId], references: [id], onDelete: Cascade)

  @@index([hotelId])
}

model Booking {
  id        Int       @id @default(autoincrement())
  hotelId   Int
  userId    String? // now FK -> User.id (nullable is fine)
  startDate DateTime?
  endDate   DateTime?
  guests    Int       @default(2)
  status    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  hotel Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  user  User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@index([hotelId])
  @@index([userId])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  hotelId   Int
  userId    String
  createdAt DateTime @default(now())

  hotel Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([hotelId, userId])
  @@index([userId])
}
