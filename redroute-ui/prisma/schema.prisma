generator client {
  provider      = "prisma-client-js"
  // Needed for Vercel. "native" = your dev box, "debian-openssl-3.0.x" = Vercel.
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(cuid())
  email        String     @unique
  passwordHash String
  firstName    String?
  lastName     String?
  dob          DateTime?
  bookings     Booking[]
  favorites    Favorite[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Hotel {
  id        Int          @id @default(autoincrement())
  name      String
  city      String
  price     Int
  rating    Float?
  createdAt DateTime     @default(now())
  images    HotelImage[]
  bookings  Booking[]
  favorites Favorite[]
}

model HotelImage {
  id      Int     @id @default(autoincrement())
  url     String
  alt     String?
  hotelId Int
  hotel   Hotel   @relation(fields: [hotelId], references: [id])
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  hotelId   Int
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  checkIn   DateTime
  checkOut  DateTime
  createdAt DateTime @default(now())
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  hotelId   Int
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  createdAt DateTime @default(now())

  @@unique([hotelId, userId])
}
